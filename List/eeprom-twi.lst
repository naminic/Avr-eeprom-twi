
AVRASM ver. 2.1.30  D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\eeprom\Avr-eeprom-twi\List\eeprom-twi.asm Wed Aug 06 00:36:58 2014

D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\eeprom\Avr-eeprom-twi\List\eeprom-twi.asm(1072): warning: Register r5 already defined by the .DEF directive
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\eeprom\Avr-eeprom-twi\List\eeprom-twi.asm(1073): warning: Register r4 already defined by the .DEF directive
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\eeprom\Avr-eeprom-twi\List\eeprom-twi.asm(1074): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00bf 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0214 	JMP  _twi_int_handler
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000033 0000      	.DW  0x0000
                 
                 _0x0:
000034 7257
000035 7469
000036 6e69
000037 2067      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x20
000038 7774
000039 206f
00003a 2020
00003b 2020      	.DB  0x74,0x77,0x6F,0x20,0x20,0x20,0x20,0x20
00003c 756e
00003d 626d
00003e 7265
00003f 6920      	.DB  0x6E,0x75,0x6D,0x62,0x65,0x72,0x20,0x69
000040 206e
000041 4545
000042 5250
000043 4d4f      	.DB  0x6E,0x20,0x45,0x45,0x50,0x52,0x4F,0x4D
000044 4400
000045 7461
000046 2061
000047 6572      	.DB  0x0,0x44,0x61,0x74,0x61,0x20,0x72,0x65
000048 6461
000049 6465
00004a 6920
00004b 3a73      	.DB  0x61,0x64,0x65,0x64,0x20,0x69,0x73,0x3A
00004c 2500
00004d 2064
00004e 4e41
00004f 2044      	.DB  0x0,0x25,0x64,0x20,0x41,0x4E,0x44,0x20
000050 6425
000051 4200
000052 6675
000053 6566      	.DB  0x25,0x64,0x0,0x42,0x75,0x66,0x66,0x65
000054 2072
000055 7369
000056 6f20
000057 7475      	.DB  0x72,0x20,0x69,0x73,0x20,0x6F,0x75,0x74
000058 6f20
000059 2066
00005a 7546
00005b 6c6c      	.DB  0x20,0x6F,0x66,0x20,0x46,0x75,0x6C,0x6C
00005c 0021
00005d 6854
00005e 7369
00005f 4d20      	.DB  0x21,0x0,0x54,0x68,0x69,0x73,0x20,0x4D
000060 7361
000061 6574
000062 2072
000063 6f6c      	.DB  0x61,0x73,0x74,0x65,0x72,0x20,0x6C,0x6F
000064 7473
000065 2073
000066 6874
000067 2065      	.DB  0x73,0x74,0x73,0x20,0x74,0x68,0x65,0x20
000068 7562
000069 2e73
00006a 4200
00006b 5355      	.DB  0x62,0x75,0x73,0x2E,0x0,0x42,0x55,0x53
00006c 4520
00006d 5252
00006e 524f
00006f 002e      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x2E,0x0
000070 6854
000071 2065
000072 6544
000073 6976      	.DB  0x54,0x68,0x65,0x20,0x44,0x65,0x76,0x69
000074 6563
000075 7320
000076 6e65
000077 7364      	.DB  0x63,0x65,0x20,0x73,0x65,0x6E,0x64,0x73
000078 4e20
000079 4341
00007a 204b
00007b 6973      	.DB  0x20,0x4E,0x41,0x43,0x4B,0x20,0x73,0x69
00007c 6e67
00007d 6c61
00007e 002e
00007f 6544      	.DB  0x67,0x6E,0x61,0x6C,0x2E,0x0,0x44,0x65
000080 6976
000081 6563
000082 4420
000083 736f      	.DB  0x76,0x69,0x63,0x65,0x20,0x44,0x6F,0x73
000084 6e65
000085 7427
000086 7220
000087 7065      	.DB  0x65,0x6E,0x27,0x74,0x20,0x72,0x65,0x70
000088 796c
000089 002e
00008a 5754
00008b 2049      	.DB  0x6C,0x79,0x2E,0x0,0x54,0x57,0x49,0x20
00008c 5542
00008d 2053
00008e 6163
00008f 276e      	.DB  0x42,0x55,0x53,0x20,0x63,0x61,0x6E,0x27
000090 2074
000091 6e69
000092 7469
000093 6169      	.DB  0x74,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
000094 696c
000095 657a
000096 002e
000097 6e55      	.DB  0x6C,0x69,0x7A,0x65,0x2E,0x0,0x55,0x6E
000098 6e6b
000099 776f
00009a 206e
00009b 5245      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x45,0x52
00009c 4f52
00009d 2e52
00009e 4900
00009f 6320      	.DB  0x52,0x4F,0x52,0x2E,0x0,0x49,0x20,0x63
0000a0 6e6f
0000a1 7566
0000a2 6573
0000a3 2164      	.DB  0x6F,0x6E,0x66,0x75,0x73,0x65,0x64,0x21
0000a4 6120
0000a5 646e
0000a6 6420
0000a7 6e6f      	.DB  0x20,0x61,0x6E,0x64,0x20,0x64,0x6F,0x6E
0000a8 7427
0000a9 6b20
0000aa 6f6e
0000ab 2077      	.DB  0x27,0x74,0x20,0x6B,0x6E,0x6F,0x77,0x20
0000ac 6261
0000ad 756f
0000ae 2074
0000af 7265      	.DB  0x61,0x62,0x6F,0x75,0x74,0x20,0x65,0x72
0000b0 6f72
0000b1 2e72
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\eeprom\Avr-eeprom-twi\List\eeprom-twi.asm(1147): warning: .cseg .db misalignment - padding zero byte
0000b2 0000      	.DB  0x72,0x6F,0x72,0x2E,0x0
                 _0x2000003:
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\eeprom\Avr-eeprom-twi\List\eeprom-twi.asm(1149): warning: .cseg .db misalignment - padding zero byte
0000b3 0007      	.DB  0x7
                 _0x2020003:
0000b4 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0000b5 0001      	.DW  0x01
0000b6 0002      	.DW  0x02
0000b7 0066      	.DW  __REG_BIT_VARS*2
                 
0000b8 0001      	.DW  0x01
0000b9 0262      	.DW  _twi_result
0000ba 0166      	.DW  _0x2000003*2
                 
0000bb 0002      	.DW  0x02
0000bc 026f      	.DW  __base_y_G101
0000bd 0168      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
0000be 0000      	.DW  0
                 
                 __RESET:
0000bf 94f8      	CLI
0000c0 27ee      	CLR  R30
0000c1 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000c2 e0f1      	LDI  R31,1
0000c3 bffb      	OUT  GICR,R31
0000c4 bfeb      	OUT  GICR,R30
0000c5 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000c6 e1f8      	LDI  R31,0x18
0000c7 bdf1      	OUT  WDTCR,R31
0000c8 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000c9 e08d      	LDI  R24,(14-2)+1
0000ca e0a2      	LDI  R26,2
0000cb 27bb      	CLR  R27
                 __CLEAR_REG:
0000cc 93ed      	ST   X+,R30
0000cd 958a      	DEC  R24
0000ce f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000cf e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000d0 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000d1 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000d2 93ed      	ST   X+,R30
0000d3 9701      	SBIW R24,1
0000d4 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000d5 e6ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000d6 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000d7 9185      	LPM  R24,Z+
0000d8 9195      	LPM  R25,Z+
0000d9 9700      	SBIW R24,0
0000da f061      	BREQ __GLOBAL_INI_END
0000db 91a5      	LPM  R26,Z+
0000dc 91b5      	LPM  R27,Z+
0000dd 9005      	LPM  R0,Z+
0000de 9015      	LPM  R1,Z+
0000df 01bf      	MOVW R22,R30
0000e0 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000e1 9005      	LPM  R0,Z+
0000e2 920d      	ST   X+,R0
0000e3 9701      	SBIW R24,1
0000e4 f7e1      	BRNE __GLOBAL_INI_LOOP
0000e5 01fb      	MOVW R30,R22
0000e6 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000e7 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000e8 bfed      	OUT  SPL,R30
0000e9 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000ea bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000eb e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ec e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000ed 940c 00ef 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega32
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*****************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <twi.h>
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define AT24_ADDRESS 0xA0 >> 1
                 ;
                 ;void main(void)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0013 unsigned char AD_EE[5],result[10];
                 ; 0000 0014 
                 ; 0000 0015 lcd_init(16);   //initiate lcd.
0000ef 972f      	SBIW R28,15
                 ;	AD_EE -> Y+10
                 ;	result -> Y+0
0000f0 e1a0      	LDI  R26,LOW(16)
0000f1 940e 03e9 	CALL _lcd_init
                 ; 0000 0016 twi_master_init(400);
0000f3 e9a0      	LDI  R26,LOW(400)
0000f4 e0b1      	LDI  R27,HIGH(400)
0000f5 d08b      	RCALL _twi_master_init
                 ; 0000 0017 #asm("sei")
0000f6 9478      	sei
                 ; 0000 0018 AD_EE[0]=0x01;       //eeprom address.
0000f7 e0e1      	LDI  R30,LOW(1)
0000f8 87ea      	STD  Y+10,R30
                 ; 0000 0019 AD_EE[1]=0x75;       //data that write to address 0x01(above line)
0000f9 e7e5      	LDI  R30,LOW(117)
0000fa 87eb      	STD  Y+11,R30
                 ; 0000 001A AD_EE[2]=0x57;
0000fb e5e7      	LDI  R30,LOW(87)
0000fc 87ec      	STD  Y+12,R30
                 ; 0000 001B 
                 ; 0000 001C while (1)
                 ; 0000 001D       {
                 ; 0000 001E          lcd_clear();
0000fd 940e 05db 	CALL SUBOPT_0x0
                 ; 0000 001F          lcd_gotoxy(0,0);
                 ; 0000 0020          lcd_putsf("Writing two     number in EEPROM");
                +
0000ff e6a8     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000100 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000101 940e 03d6 	CALL _lcd_putsf
                 ; 0000 0021          delay_ms(3000);
000103 eba8      	LDI  R26,LOW(3000)
000104 e0bb      	LDI  R27,HIGH(3000)
000105 940e 05e2 	CALL SUBOPT_0x1
                 ; 0000 0022          twi_master_trans(AT24_ADDRESS,&AD_EE[0],3,0,0);
000107 e0e3      	LDI  R30,LOW(3)
000108 93ea      	ST   -Y,R30
000109 e0e0      	LDI  R30,LOW(0)
00010a e0f0      	LDI  R31,HIGH(0)
00010b 93fa      	ST   -Y,R31
00010c 93ea      	ST   -Y,R30
00010d e0a0      	LDI  R26,LOW(0)
00010e d09a      	RCALL _twi_master_trans
                 ; 0000 0023          delay_ms(40);
00010f e2a8      	LDI  R26,LOW(40)
000110 e0b0      	LDI  R27,0
000111 940e 05e2 	CALL SUBOPT_0x1
                 ; 0000 0024 
                 ; 0000 0025          twi_master_trans(AT24_ADDRESS,&AD_EE[0],1,&AD_EE[3],2);
000113 e0e1      	LDI  R30,LOW(1)
000114 93ea      	ST   -Y,R30
000115 01fe      	MOVW R30,R28
000116 9671      	ADIW R30,17
000117 93fa      	ST   -Y,R31
000118 93ea      	ST   -Y,R30
000119 e0a2      	LDI  R26,LOW(2)
00011a d08e      	RCALL _twi_master_trans
                 ; 0000 0026          lcd_clear();
00011b 940e 05db 	CALL SUBOPT_0x0
                 ; 0000 0027          lcd_gotoxy(0,0);
                 ; 0000 0028          switch(twi_result)
00011d 91e0 0262 	LDS  R30,_twi_result
00011f e0f0      	LDI  R31,0
                 ; 0000 0029          {
                 ; 0000 002A             case TWI_RES_OK:
000120 9730      	SBIW R30,0
000121 f541      	BRNE _0x9
                 ; 0000 002B                 lcd_putsf("Data readed is:");
                +
000122 e8a9     +LDI R26 , LOW ( 2 * _0x0 + ( 33 ) )
000123 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW2FN _0x0,33
000124 940e 03d6 	CALL _lcd_putsf
                 ; 0000 002C                 delay_ms(500);
000126 efa4      	LDI  R26,LOW(500)
000127 e0b1      	LDI  R27,HIGH(500)
000128 940e 0625 	CALL _delay_ms
                 ; 0000 002D                 lcd_gotoxy(0,1);
00012a e0e0      	LDI  R30,LOW(0)
00012b 93ea      	ST   -Y,R30
00012c e0a1      	LDI  R26,LOW(1)
00012d 940e 0399 	CALL _lcd_gotoxy
                 ; 0000 002E                 sprintf(result,"%d AND %d",AD_EE[3],AD_EE[4]);
00012f 01fe      	MOVW R30,R28
000130 93fa      	ST   -Y,R31
000131 93ea      	ST   -Y,R30
                +
000132 e9e9     +LDI R30 , LOW ( 2 * _0x0 + ( 49 ) )
000133 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 49 ) )
                 	__POINTW1FN _0x0,49
000134 93fa      	ST   -Y,R31
000135 93ea      	ST   -Y,R30
000136 89e9      	LDD  R30,Y+17
000137 27ff      	CLR  R31
000138 2766      	CLR  R22
000139 2777      	CLR  R23
00013a 940e 0661 	CALL __PUTPARD1
00013c 89ee      	LDD  R30,Y+22
00013d 27ff      	CLR  R31
00013e 2766      	CLR  R22
00013f 2777      	CLR  R23
000140 940e 0661 	CALL __PUTPARD1
000142 e088      	LDI  R24,8
000143 940e 058e 	CALL _sprintf
000145 962c      	ADIW R28,12
                 ; 0000 002F                 lcd_puts(result);
000146 01de      	MOVW R26,R28
000147 940e 03c7 	CALL _lcd_puts
                 ; 0000 0030                 break;
000149 c035      	RJMP _0x8
                 ; 0000 0031             case TWI_RES_BUFFER_OVERFLOW:
                 _0x9:
00014a 30e1      	CPI  R30,LOW(0x1)
00014b e0a0      	LDI  R26,HIGH(0x1)
00014c 07fa      	CPC  R31,R26
00014d f419      	BRNE _0xA
                 ; 0000 0032                 lcd_putsf("Buffer is out of Full!");
                +
00014e eaa3     +LDI R26 , LOW ( 2 * _0x0 + ( 59 ) )
00014f e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 59 ) )
                 	__POINTW2FN _0x0,59
000150 c02c      	RJMP _0x16
                 ; 0000 0033                 break;
                 ; 0000 0034             case TWI_RES_ARBITRATION_LOST:
                 _0xA:
000151 30e2      	CPI  R30,LOW(0x2)
000152 e0a0      	LDI  R26,HIGH(0x2)
000153 07fa      	CPC  R31,R26
000154 f419      	BRNE _0xB
                 ; 0000 0035                 lcd_putsf("This Master losts the bus.");
                +
000155 ebaa     +LDI R26 , LOW ( 2 * _0x0 + ( 82 ) )
000156 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 82 ) )
                 	__POINTW2FN _0x0,82
000157 c025      	RJMP _0x16
                 ; 0000 0036                 break;
                 ; 0000 0037             case TWI_RES_BUS_ERROR:
                 _0xB:
000158 30e3      	CPI  R30,LOW(0x3)
000159 e0a0      	LDI  R26,HIGH(0x3)
00015a 07fa      	CPC  R31,R26
00015b f419      	BRNE _0xC
                 ; 0000 0038                 lcd_putsf("BUS ERROR.");
                +
00015c eda5     +LDI R26 , LOW ( 2 * _0x0 + ( 109 ) )
00015d e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 109 ) )
                 	__POINTW2FN _0x0,109
00015e c01e      	RJMP _0x16
                 ; 0000 0039                 break;
                 ; 0000 003A             case TWI_RES_NACK_RECEIVED:
                 _0xC:
00015f 30e4      	CPI  R30,LOW(0x4)
000160 e0a0      	LDI  R26,HIGH(0x4)
000161 07fa      	CPC  R31,R26
000162 f419      	BRNE _0xD
                 ; 0000 003B                 lcd_putsf("The Device sends NACK signal.");
                +
000163 eea0     +LDI R26 , LOW ( 2 * _0x0 + ( 120 ) )
000164 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 120 ) )
                 	__POINTW2FN _0x0,120
000165 c017      	RJMP _0x16
                 ; 0000 003C                 break;
                 ; 0000 003D             case TWI_RES_BUS_TIMEOUT:
                 _0xD:
000166 30e5      	CPI  R30,LOW(0x5)
000167 e0a0      	LDI  R26,HIGH(0x5)
000168 07fa      	CPC  R31,R26
000169 f419      	BRNE _0xE
                 ; 0000 003E                 lcd_putsf("Device Dosen't reply.");
                +
00016a efae     +LDI R26 , LOW ( 2 * _0x0 + ( 150 ) )
00016b e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 150 ) )
                 	__POINTW2FN _0x0,150
00016c c010      	RJMP _0x16
                 ; 0000 003F                 break;
                 ; 0000 0040             case TWI_RES_FAIL:
                 _0xE:
00016d 30e6      	CPI  R30,LOW(0x6)
00016e e0a0      	LDI  R26,HIGH(0x6)
00016f 07fa      	CPC  R31,R26
000170 f419      	BRNE _0xF
                 ; 0000 0041                 lcd_putsf("TWI BUS can't initialize.");
                +
000171 e1a4     +LDI R26 , LOW ( 2 * _0x0 + ( 172 ) )
000172 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 172 ) )
                 	__POINTW2FN _0x0,172
000173 c009      	RJMP _0x16
                 ; 0000 0042                 break;
                 ; 0000 0043             case TWI_RES_UNKNOWN:
                 _0xF:
000174 30e7      	CPI  R30,LOW(0x7)
000175 e0a0      	LDI  R26,HIGH(0x7)
000176 07fa      	CPC  R31,R26
000177 f419      	BRNE _0x11
                 ; 0000 0044                 lcd_putsf("Unknown ERROR.");
                +
000178 e2ae     +LDI R26 , LOW ( 2 * _0x0 + ( 198 ) )
000179 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 198 ) )
                 	__POINTW2FN _0x0,198
00017a c002      	RJMP _0x16
                 ; 0000 0045                 break;
                 ; 0000 0046             default:
                 _0x11:
                 ; 0000 0047                 lcd_putsf("I confused! and don't know about error.");
                +
00017b e3ad     +LDI R26 , LOW ( 2 * _0x0 + ( 213 ) )
00017c e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 213 ) )
                 	__POINTW2FN _0x0,213
                 _0x16:
00017d 940e 03d6 	CALL _lcd_putsf
                 ; 0000 0048          }
                 _0x8:
                 ; 0000 0049 
                 ; 0000 004A 
                 ; 0000 004B          while(1);      //end of 8 byte read/write test.
                 _0x12:
00017f cfff      	RJMP _0x12
                 ; 0000 004C       }
                 ; 0000 004D }
                 _0x15:
000180 cfff      	RJMP _0x15
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _twi_master_init:
000181 93ba      	ST   -Y,R27
000182 93aa      	ST   -Y,R26
000183 931a      	ST   -Y,R17
000184 9468      	SET
000185 f821      	BLD  R2,1
000186 e0e7      	LDI  R30,LOW(7)
000187 93e0 0262 	STS  _twi_result,R30
000189 e0e0      	LDI  R30,LOW(0)
00018a 93e0 026b 	STS  _twi_slave_rx_handler_G100,R30
00018c 93e0 026c 	STS  _twi_slave_rx_handler_G100+1,R30
00018e 93e0 026d 	STS  _twi_slave_tx_handler_G100,R30
000190 93e0 026e 	STS  _twi_slave_tx_handler_G100+1,R30
000192 b3e5      	IN   R30,0x15
000193 60e3      	ORI  R30,LOW(0x3)
000194 bbe5      	OUT  0x15,R30
000195 b1e1      	IN   R30,0x1
000196 7fec      	ANDI R30,LOW(0xFC)
000197 b9e1      	OUT  0x1,R30
000198 81e9      	LDD  R30,Y+1
000199 81fa      	LDD  R31,Y+1+1
00019a eaa0      	LDI  R26,LOW(4000)
00019b e0bf      	LDI  R27,HIGH(4000)
00019c 940e 063c 	CALL __DIVW21U
00019e 2f1e      	MOV  R17,R30
00019f 3018      	CPI  R17,8
0001a0 f008      	BRLO _0x2000004
0001a1 5018      	SUBI R17,LOW(8)
                 _0x2000004:
0001a2 b910      	OUT  0x0,R17
0001a3 b7e6      	IN   R30,0x36
0001a4 78e0      	ANDI R30,LOW(0x80)
0001a5 64e5      	ORI  R30,LOW(0x45)
0001a6 bfe6      	OUT  0x36,R30
0001a7 940c 03e6 	JMP  _0x20A0003
                 _twi_master_trans:
0001a9 93aa      	ST   -Y,R26
0001aa 9724      	SBIW R28,4
0001ab fe21      	SBRS R2,1
0001ac c064      	RJMP _0x2000005
0001ad 85ea      	LDD  R30,Y+10
0001ae 0fee      	LSL  R30
0001af 93e0 0263 	STS  _slave_address_G100,R30
0001b1 85e8      	LDD  R30,Y+8
0001b2 85f9      	LDD  R31,Y+8+1
0001b3 93e0 0264 	STS  _twi_tx_buffer_G100,R30
0001b5 93f0 0265 	STS  _twi_tx_buffer_G100+1,R31
0001b7 e0e0      	LDI  R30,LOW(0)
0001b8 93e0 0260 	STS  _twi_tx_index,R30
0001ba 81ef      	LDD  R30,Y+7
0001bb 93e0 0266 	STS  _bytes_to_tx_G100,R30
0001bd 81ed      	LDD  R30,Y+5
0001be 81fe      	LDD  R31,Y+5+1
0001bf 93e0 0267 	STS  _twi_rx_buffer_G100,R30
0001c1 93f0 0268 	STS  _twi_rx_buffer_G100+1,R31
0001c3 e0e0      	LDI  R30,LOW(0)
0001c4 93e0 0261 	STS  _twi_rx_index,R30
0001c6 81ec      	LDD  R30,Y+4
0001c7 93e0 0269 	STS  _bytes_to_rx_G100,R30
0001c9 e0e6      	LDI  R30,LOW(6)
0001ca 93e0 0262 	STS  _twi_result,R30
0001cc 9478      	sei
0001cd 81ef      	LDD  R30,Y+7
0001ce 30e0      	CPI  R30,0
0001cf f081      	BREQ _0x2000006
0001d0 85e8      	LDD  R30,Y+8
0001d1 85f9      	LDD  R31,Y+8+1
0001d2 9730      	SBIW R30,0
0001d3 f409      	BRNE _0x2000007
0001d4 c03c      	RJMP _0x20A0005
                 _0x2000007:
0001d5 81ec      	LDD  R30,Y+4
0001d6 30e0      	CPI  R30,0
0001d7 f021      	BREQ _0x2000009
0001d8 81ad      	LDD  R26,Y+5
0001d9 81be      	LDD  R27,Y+5+1
0001da 9710      	SBIW R26,0
0001db f009      	BREQ _0x200000A
                 _0x2000009:
0001dc c001      	RJMP _0x2000008
                 _0x200000A:
0001dd c033      	RJMP _0x20A0005
                 _0x2000008:
0001de 9468      	SET
0001df c00d      	RJMP _0x2000065
                 _0x2000006:
0001e0 81ec      	LDD  R30,Y+4
0001e1 30e0      	CPI  R30,0
0001e2 f141      	BREQ _0x200000C
0001e3 81ed      	LDD  R30,Y+5
0001e4 81fe      	LDD  R31,Y+5+1
0001e5 9730      	SBIW R30,0
0001e6 f151      	BREQ _0x20A0005
0001e7 91e0 0263 	LDS  R30,_slave_address_G100
0001e9 60e1      	ORI  R30,1
0001ea 93e0 0263 	STS  _slave_address_G100,R30
0001ec 94e8      	CLT
                 _0x2000065:
0001ed f820      	BLD  R2,0
0001ee 94e8      	CLT
0001ef f821      	BLD  R2,1
0001f0 b7e6      	IN   R30,0x36
0001f1 70ef      	ANDI R30,LOW(0xF)
0001f2 6ae0      	ORI  R30,LOW(0xA0)
0001f3 bfe6      	OUT  0x36,R30
                +
0001f4 e2e0     +LDI R30 , LOW ( 0x7A120 )
0001f5 eaf1     +LDI R31 , HIGH ( 0x7A120 )
0001f6 e067     +LDI R22 , BYTE3 ( 0x7A120 )
0001f7 e070     +LDI R23 , BYTE4 ( 0x7A120 )
                 	__GETD1N 0x7A120
0001f8 940e 065c 	CALL __PUTD1S0
                 _0x200000E:
0001fa fc21      	SBRC R2,1
0001fb c00f      	RJMP _0x2000010
0001fc 940e 0657 	CALL __GETD1S0
0001fe 9731      	SBIW R30,1
0001ff 4060      	SBCI R22,0
000200 4070      	SBCI R23,0
000201 940e 065c 	CALL __PUTD1S0
000203 f431      	BRNE _0x2000011
000204 e0e5      	LDI  R30,LOW(5)
000205 93e0 0262 	STS  _twi_result,R30
000207 9468      	SET
000208 f821      	BLD  R2,1
000209 c007      	RJMP _0x20A0005
                 _0x2000011:
00020a cfef      	RJMP _0x200000E
                 _0x2000010:
                 _0x200000C:
00020b 91a0 0262 	LDS  R26,_twi_result
00020d e0e0      	LDI  R30,LOW(0)
00020e 940e 0637 	CALL __EQB12
000210 c001      	RJMP _0x20A0004
                 _0x2000005:
                 _0x20A0005:
000211 e0e0      	LDI  R30,LOW(0)
                 _0x20A0004:
000212 962b      	ADIW R28,11
000213 9508      	RET
                 _twi_int_handler:
000214 920a      	ST   -Y,R0
000215 921a      	ST   -Y,R1
000216 92fa      	ST   -Y,R15
000217 936a      	ST   -Y,R22
000218 937a      	ST   -Y,R23
000219 938a      	ST   -Y,R24
00021a 939a      	ST   -Y,R25
00021b 93aa      	ST   -Y,R26
00021c 93ba      	ST   -Y,R27
00021d 93ea      	ST   -Y,R30
00021e 93fa      	ST   -Y,R31
00021f b7ef      	IN   R30,SREG
000220 93ea      	ST   -Y,R30
000221 940e 0666 	CALL __SAVELOCR6
000223 9110 0261 	LDS  R17,_twi_rx_index
000225 9100 0260 	LDS  R16,_twi_tx_index
000227 9130 0266 	LDS  R19,_bytes_to_tx_G100
000229 9120 0262 	LDS  R18,_twi_result
00022b 2fe1      	MOV  R30,R17
00022c 91a0 0267 	LDS  R26,_twi_rx_buffer_G100
00022e 91b0 0268 	LDS  R27,_twi_rx_buffer_G100+1
000230 e0f0      	LDI  R31,0
000231 0fea      	ADD  R30,R26
000232 1ffb      	ADC  R31,R27
000233 01af      	MOVW R20,R30
000234 b1e1      	IN   R30,0x1
000235 7fe8      	ANDI R30,LOW(0xF8)
000236 30e8      	CPI  R30,LOW(0x8)
000237 f411      	BRNE _0x2000017
000238 e020      	LDI  R18,LOW(0)
000239 c002      	RJMP _0x2000018
                 _0x2000017:
00023a 31e0      	CPI  R30,LOW(0x10)
00023b f419      	BRNE _0x2000019
                 _0x2000018:
00023c 91e0 0263 	LDS  R30,_slave_address_G100
00023e c010      	RJMP _0x2000067
                 _0x2000019:
00023f 31e8      	CPI  R30,LOW(0x18)
000240 f011      	BREQ _0x200001D
000241 32e8      	CPI  R30,LOW(0x28)
000242 f521      	BRNE _0x200001E
                 _0x200001D:
000243 1703      	CP   R16,R19
000244 f480      	BRSH _0x200001F
000245 2fe0      	MOV  R30,R16
000246 5f0f      	SUBI R16,-1
000247 91a0 0264 	LDS  R26,_twi_tx_buffer_G100
000249 91b0 0265 	LDS  R27,_twi_tx_buffer_G100+1
00024b e0f0      	LDI  R31,0
00024c 0fae      	ADD  R26,R30
00024d 1fbf      	ADC  R27,R31
00024e 91ec      	LD   R30,X
                 _0x2000067:
00024f b9e3      	OUT  0x3,R30
000250 b7e6      	IN   R30,0x36
000251 70ef      	ANDI R30,LOW(0xF)
000252 68e0      	ORI  R30,0x80
000253 bfe6      	OUT  0x36,R30
000254 c011      	RJMP _0x2000020
                 _0x200001F:
000255 91e0 0269 	LDS  R30,_bytes_to_rx_G100
000257 171e      	CP   R17,R30
000258 f460      	BRSH _0x2000021
000259 91e0 0263 	LDS  R30,_slave_address_G100
00025b 60e1      	ORI  R30,1
00025c 93e0 0263 	STS  _slave_address_G100,R30
00025e 94e8      	CLT
00025f f820      	BLD  R2,0
000260 b7e6      	IN   R30,0x36
000261 70ef      	ANDI R30,LOW(0xF)
000262 6ae0      	ORI  R30,LOW(0xA0)
000263 bfe6      	OUT  0x36,R30
000264 c0fb      	RJMP _0x2000016
                 _0x2000021:
000265 c033      	RJMP _0x2000022
                 _0x2000020:
000266 c0f9      	RJMP _0x2000016
                 _0x200001E:
000267 35e0      	CPI  R30,LOW(0x50)
000268 f429      	BRNE _0x2000023
000269 b1e3      	IN   R30,0x3
00026a 01da      	MOVW R26,R20
00026b 93ec      	ST   X,R30
00026c 5f1f      	SUBI R17,-LOW(1)
00026d c002      	RJMP _0x2000024
                 _0x2000023:
00026e 34e0      	CPI  R30,LOW(0x40)
00026f f471      	BRNE _0x2000025
                 _0x2000024:
000270 91e0 0269 	LDS  R30,_bytes_to_rx_G100
000272 50e1      	SUBI R30,LOW(1)
000273 171e      	CP   R17,R30
000274 f020      	BRLO _0x2000026
000275 b7e6      	IN   R30,0x36
000276 70ef      	ANDI R30,LOW(0xF)
000277 68e0      	ORI  R30,0x80
000278 c003      	RJMP _0x2000068
                 _0x2000026:
000279 b7e6      	IN   R30,0x36
00027a 70ef      	ANDI R30,LOW(0xF)
00027b 6ce0      	ORI  R30,LOW(0xC0)
                 _0x2000068:
00027c bfe6      	OUT  0x36,R30
00027d c0e2      	RJMP _0x2000016
                 _0x2000025:
00027e 35e8      	CPI  R30,LOW(0x58)
00027f f429      	BRNE _0x2000028
000280 b1e3      	IN   R30,0x3
000281 01da      	MOVW R26,R20
000282 93ec      	ST   X,R30
000283 5f1f      	SUBI R17,-LOW(1)
000284 c002      	RJMP _0x2000029
                 _0x2000028:
000285 32e0      	CPI  R30,LOW(0x20)
000286 f409      	BRNE _0x200002A
                 _0x2000029:
000287 c002      	RJMP _0x200002B
                 _0x200002A:
000288 33e0      	CPI  R30,LOW(0x30)
000289 f409      	BRNE _0x200002C
                 _0x200002B:
00028a c002      	RJMP _0x200002D
                 _0x200002C:
00028b 34e8      	CPI  R30,LOW(0x48)
00028c f469      	BRNE _0x200002E
                 _0x200002D:
00028d 3020      	CPI  R18,0
00028e f451      	BRNE _0x200002F
00028f fe20      	SBRS R2,0
000290 c003      	RJMP _0x2000030
000291 1703      	CP   R16,R19
000292 f028      	BRLO _0x2000032
000293 c005      	RJMP _0x2000033
                 _0x2000030:
000294 91e0 0269 	LDS  R30,_bytes_to_rx_G100
000296 171e      	CP   R17,R30
000297 f408      	BRSH _0x2000034
                 _0x2000032:
000298 e024      	LDI  R18,LOW(4)
                 _0x2000034:
                 _0x2000033:
                 _0x200002F:
                 _0x2000022:
000299 c0c0      	RJMP _0x2000069
                 _0x200002E:
00029a 33e8      	CPI  R30,LOW(0x38)
00029b f429      	BRNE _0x2000037
00029c e022      	LDI  R18,LOW(2)
00029d b7e6      	IN   R30,0x36
00029e 70ef      	ANDI R30,LOW(0xF)
00029f 68e0      	ORI  R30,0x80
0002a0 c0bc      	RJMP _0x200006A
                 _0x2000037:
0002a1 36e8      	CPI  R30,LOW(0x68)
0002a2 f011      	BREQ _0x200003A
0002a3 37e8      	CPI  R30,LOW(0x78)
0002a4 f411      	BRNE _0x200003B
                 _0x200003A:
0002a5 e022      	LDI  R18,LOW(2)
0002a6 c005      	RJMP _0x200003C
                 _0x200003B:
0002a7 36e0      	CPI  R30,LOW(0x60)
0002a8 f011      	BREQ _0x200003F
0002a9 37e0      	CPI  R30,LOW(0x70)
0002aa f491      	BRNE _0x2000040
                 _0x200003F:
0002ab e020      	LDI  R18,LOW(0)
                 _0x200003C:
0002ac e010      	LDI  R17,LOW(0)
0002ad 94e8      	CLT
0002ae f820      	BLD  R2,0
0002af 91e0 026a 	LDS  R30,_twi_rx_buffer_size_G100
0002b1 30e0      	CPI  R30,0
0002b2 f429      	BRNE _0x2000041
0002b3 e021      	LDI  R18,LOW(1)
0002b4 b7e6      	IN   R30,0x36
0002b5 70ef      	ANDI R30,LOW(0xF)
0002b6 68e0      	ORI  R30,0x80
0002b7 c003      	RJMP _0x200006B
                 _0x2000041:
0002b8 b7e6      	IN   R30,0x36
0002b9 70ef      	ANDI R30,LOW(0xF)
0002ba 6ce0      	ORI  R30,LOW(0xC0)
                 _0x200006B:
0002bb bfe6      	OUT  0x36,R30
0002bc c0a3      	RJMP _0x2000016
                 _0x2000040:
0002bd 38e0      	CPI  R30,LOW(0x80)
0002be f011      	BREQ _0x2000044
0002bf 39e0      	CPI  R30,LOW(0x90)
0002c0 f529      	BRNE _0x2000045
                 _0x2000044:
0002c1 fe20      	SBRS R2,0
0002c2 c002      	RJMP _0x2000046
0002c3 e021      	LDI  R18,LOW(1)
0002c4 c095      	RJMP _0x2000047
                 _0x2000046:
0002c5 b1e3      	IN   R30,0x3
0002c6 01da      	MOVW R26,R20
0002c7 93ec      	ST   X,R30
0002c8 5f1f      	SUBI R17,-LOW(1)
0002c9 91e0 026a 	LDS  R30,_twi_rx_buffer_size_G100
0002cb 171e      	CP   R17,R30
0002cc f4b0      	BRSH _0x2000048
0002cd 91e0 026b 	LDS  R30,_twi_slave_rx_handler_G100
0002cf 91f0 026c 	LDS  R31,_twi_slave_rx_handler_G100+1
0002d1 9730      	SBIW R30,0
0002d2 f411      	BRNE _0x2000049
0002d3 e026      	LDI  R18,LOW(6)
0002d4 c085      	RJMP _0x2000047
                 _0x2000049:
0002d5 e0a0      	LDI  R26,LOW(0)
                +
0002d6 91e0 026b+LDS R30 , _twi_slave_rx_handler_G100 + ( 0 )
0002d8 91f0 026c+LDS R31 , _twi_slave_rx_handler_G100 + ( 0 ) + 1
0002da 9509     +ICALL
                 	__CALL1MN _twi_slave_rx_handler_G100,0
0002db 30e0      	CPI  R30,0
0002dc f029      	BREQ _0x200004A
0002dd b7e6      	IN   R30,0x36
0002de 70ef      	ANDI R30,LOW(0xF)
0002df 6ce0      	ORI  R30,LOW(0xC0)
0002e0 bfe6      	OUT  0x36,R30
0002e1 c07e      	RJMP _0x2000016
                 _0x200004A:
0002e2 c002      	RJMP _0x200004B
                 _0x2000048:
0002e3 9468      	SET
0002e4 f820      	BLD  R2,0
                 _0x200004B:
0002e5 c002      	RJMP _0x200004C
                 _0x2000045:
0002e6 38e8      	CPI  R30,LOW(0x88)
0002e7 f409      	BRNE _0x200004D
                 _0x200004C:
0002e8 c002      	RJMP _0x200004E
                 _0x200004D:
0002e9 39e8      	CPI  R30,LOW(0x98)
0002ea f429      	BRNE _0x200004F
                 _0x200004E:
0002eb b7e6      	IN   R30,0x36
0002ec 70ef      	ANDI R30,LOW(0xF)
0002ed 68e0      	ORI  R30,0x80
0002ee bfe6      	OUT  0x36,R30
0002ef c070      	RJMP _0x2000016
                 _0x200004F:
0002f0 3ae0      	CPI  R30,LOW(0xA0)
0002f1 f4a9      	BRNE _0x2000050
0002f2 b7e6      	IN   R30,0x36
0002f3 70ef      	ANDI R30,LOW(0xF)
0002f4 6ce0      	ORI  R30,LOW(0xC0)
0002f5 bfe6      	OUT  0x36,R30
0002f6 9468      	SET
0002f7 f821      	BLD  R2,1
0002f8 91e0 026b 	LDS  R30,_twi_slave_rx_handler_G100
0002fa 91f0 026c 	LDS  R31,_twi_slave_rx_handler_G100+1
0002fc 9730      	SBIW R30,0
0002fd f039      	BREQ _0x2000051
0002fe e0a1      	LDI  R26,LOW(1)
                +
0002ff 91e0 026b+LDS R30 , _twi_slave_rx_handler_G100 + ( 0 )
000301 91f0 026c+LDS R31 , _twi_slave_rx_handler_G100 + ( 0 ) + 1
000303 9509     +ICALL
                 	__CALL1MN _twi_slave_rx_handler_G100,0
000304 c001      	RJMP _0x2000052
                 _0x2000051:
000305 e026      	LDI  R18,LOW(6)
                 _0x2000052:
000306 c059      	RJMP _0x2000016
                 _0x2000050:
000307 3be0      	CPI  R30,LOW(0xB0)
000308 f411      	BRNE _0x2000053
000309 e022      	LDI  R18,LOW(2)
00030a c002      	RJMP _0x2000054
                 _0x2000053:
00030b 3ae8      	CPI  R30,LOW(0xA8)
00030c f4b9      	BRNE _0x2000055
                 _0x2000054:
00030d 91e0 026d 	LDS  R30,_twi_slave_tx_handler_G100
00030f 91f0 026e 	LDS  R31,_twi_slave_tx_handler_G100+1
000311 9730      	SBIW R30,0
000312 f059      	BREQ _0x2000056
000313 e0a0      	LDI  R26,LOW(0)
                +
000314 91e0 026d+LDS R30 , _twi_slave_tx_handler_G100 + ( 0 )
000316 91f0 026e+LDS R31 , _twi_slave_tx_handler_G100 + ( 0 ) + 1
000318 9509     +ICALL
                 	__CALL1MN _twi_slave_tx_handler_G100,0
000319 2f3e      	MOV  R19,R30
00031a 30e0      	CPI  R30,0
00031b f011      	BREQ _0x2000058
00031c e020      	LDI  R18,LOW(0)
00031d c002      	RJMP _0x2000059
                 _0x2000056:
                 _0x2000058:
00031e e026      	LDI  R18,LOW(6)
00031f c03a      	RJMP _0x2000047
                 _0x2000059:
000320 e000      	LDI  R16,LOW(0)
000321 94e8      	CLT
000322 f820      	BLD  R2,0
000323 c002      	RJMP _0x200005A
                 _0x2000055:
000324 3be8      	CPI  R30,LOW(0xB8)
000325 f4e1      	BRNE _0x200005B
                 _0x200005A:
000326 fe20      	SBRS R2,0
000327 c002      	RJMP _0x200005C
000328 e021      	LDI  R18,LOW(1)
000329 c030      	RJMP _0x2000047
                 _0x200005C:
00032a 2fe0      	MOV  R30,R16
00032b 5f0f      	SUBI R16,-1
00032c 91a0 0264 	LDS  R26,_twi_tx_buffer_G100
00032e 91b0 0265 	LDS  R27,_twi_tx_buffer_G100+1
000330 e0f0      	LDI  R31,0
000331 0fae      	ADD  R26,R30
000332 1fbf      	ADC  R27,R31
000333 91ec      	LD   R30,X
000334 b9e3      	OUT  0x3,R30
000335 1703      	CP   R16,R19
000336 f420      	BRSH _0x200005D
000337 b7e6      	IN   R30,0x36
000338 70ef      	ANDI R30,LOW(0xF)
000339 6ce0      	ORI  R30,LOW(0xC0)
00033a c005      	RJMP _0x200006C
                 _0x200005D:
00033b 9468      	SET
00033c f820      	BLD  R2,0
00033d b7e6      	IN   R30,0x36
00033e 70ef      	ANDI R30,LOW(0xF)
00033f 68e0      	ORI  R30,0x80
                 _0x200006C:
000340 bfe6      	OUT  0x36,R30
000341 c01e      	RJMP _0x2000016
                 _0x200005B:
000342 3ce0      	CPI  R30,LOW(0xC0)
000343 f011      	BREQ _0x2000060
000344 3ce8      	CPI  R30,LOW(0xC8)
000345 f489      	BRNE _0x2000061
                 _0x2000060:
000346 b7e6      	IN   R30,0x36
000347 70ef      	ANDI R30,LOW(0xF)
000348 6ce0      	ORI  R30,LOW(0xC0)
000349 bfe6      	OUT  0x36,R30
00034a 91e0 026d 	LDS  R30,_twi_slave_tx_handler_G100
00034c 91f0 026e 	LDS  R31,_twi_slave_tx_handler_G100+1
00034e 9730      	SBIW R30,0
00034f f031      	BREQ _0x2000062
000350 e0a1      	LDI  R26,LOW(1)
                +
000351 91e0 026d+LDS R30 , _twi_slave_tx_handler_G100 + ( 0 )
000353 91f0 026e+LDS R31 , _twi_slave_tx_handler_G100 + ( 0 ) + 1
000355 9509     +ICALL
                 	__CALL1MN _twi_slave_tx_handler_G100,0
                 _0x2000062:
000356 c007      	RJMP _0x2000035
                 _0x2000061:
000357 30e0      	CPI  R30,0
000358 f439      	BRNE _0x2000016
000359 e023      	LDI  R18,LOW(3)
                 _0x2000047:
                 _0x2000069:
00035a b7e6      	IN   R30,0x36
00035b 70ef      	ANDI R30,LOW(0xF)
00035c 6de0      	ORI  R30,LOW(0xD0)
                 _0x200006A:
00035d bfe6      	OUT  0x36,R30
                 _0x2000035:
00035e 9468      	SET
00035f f821      	BLD  R2,1
                 _0x2000016:
000360 9310 0261 	STS  _twi_rx_index,R17
000362 9300 0260 	STS  _twi_tx_index,R16
000364 9320 0262 	STS  _twi_result,R18
000366 9330 0266 	STS  _bytes_to_tx_G100,R19
000368 940e 066d 	CALL __LOADLOCR6
00036a 9626      	ADIW R28,6
00036b 91e9      	LD   R30,Y+
00036c bfef      	OUT  SREG,R30
00036d 91f9      	LD   R31,Y+
00036e 91e9      	LD   R30,Y+
00036f 91b9      	LD   R27,Y+
000370 91a9      	LD   R26,Y+
000371 9199      	LD   R25,Y+
000372 9189      	LD   R24,Y+
000373 9179      	LD   R23,Y+
000374 9169      	LD   R22,Y+
000375 90f9      	LD   R15,Y+
000376 9019      	LD   R1,Y+
000377 9009      	LD   R0,Y+
000378 9518      	RETI
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
000379 93aa      	ST   -Y,R26
00037a b3e2      	IN   R30,0x12
00037b 70ef      	ANDI R30,LOW(0xF)
00037c 2fae      	MOV  R26,R30
00037d 81e8      	LD   R30,Y
00037e 7fe0      	ANDI R30,LOW(0xF0)
00037f 2bea      	OR   R30,R26
000380 bbe2      	OUT  0x12,R30
                +
000381 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000382 958a     +DEC R24
000383 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000384 9a92      	SBI  0x12,2
                +
000385 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000386 958a     +DEC R24
000387 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000388 9892      	CBI  0x12,2
                +
000389 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00038a 958a     +DEC R24
00038b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00038c c088      	RJMP _0x20A0002
                 __lcd_write_data:
00038d 93aa      	ST   -Y,R26
00038e 81a8      	LD   R26,Y
00038f dfe9      	RCALL __lcd_write_nibble_G101
000390 81e8          ld    r30,y
000391 95e2          swap  r30
000392 83e8          st    y,r30
000393 81a8      	LD   R26,Y
000394 dfe4      	RCALL __lcd_write_nibble_G101
                +
000395 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000396 958a     +DEC R24
000397 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000398 c07c      	RJMP _0x20A0002
                 _lcd_gotoxy:
000399 93aa      	ST   -Y,R26
00039a 81e8      	LD   R30,Y
00039b e0f0      	LDI  R31,0
00039c 59e1      	SUBI R30,LOW(-__base_y_G101)
00039d 4ffd      	SBCI R31,HIGH(-__base_y_G101)
00039e 81e0      	LD   R30,Z
00039f 81a9      	LDD  R26,Y+1
0003a0 0fae      	ADD  R26,R30
0003a1 dfeb      	RCALL __lcd_write_data
0003a2 8059      	LDD  R5,Y+1
0003a3 8048      	LDD  R4,Y+0
0003a4 9622      	ADIW R28,2
0003a5 9508      	RET
                 _lcd_clear:
0003a6 e0a2      	LDI  R26,LOW(2)
0003a7 940e 05eb 	CALL SUBOPT_0x2
0003a9 e0ac      	LDI  R26,LOW(12)
0003aa dfe2      	RCALL __lcd_write_data
0003ab e0a1      	LDI  R26,LOW(1)
0003ac 940e 05eb 	CALL SUBOPT_0x2
0003ae e0e0      	LDI  R30,LOW(0)
0003af 2e4e      	MOV  R4,R30
0003b0 2e5e      	MOV  R5,R30
0003b1 9508      	RET
                 _lcd_putchar:
0003b2 93aa      	ST   -Y,R26
0003b3 81a8      	LD   R26,Y
0003b4 30aa      	CPI  R26,LOW(0xA)
0003b5 f011      	BREQ _0x2020005
0003b6 1457      	CP   R5,R7
0003b7 f048      	BRLO _0x2020004
                 _0x2020005:
0003b8 e0e0      	LDI  R30,LOW(0)
0003b9 93ea      	ST   -Y,R30
0003ba 9443      	INC  R4
0003bb 2da4      	MOV  R26,R4
0003bc dfdc      	RCALL _lcd_gotoxy
0003bd 81a8      	LD   R26,Y
0003be 30aa      	CPI  R26,LOW(0xA)
0003bf f409      	BRNE _0x2020007
0003c0 c054      	RJMP _0x20A0002
                 _0x2020007:
                 _0x2020004:
0003c1 9453      	INC  R5
0003c2 9a90      	SBI  0x12,0
0003c3 81a8      	LD   R26,Y
0003c4 dfc8      	RCALL __lcd_write_data
0003c5 9890      	CBI  0x12,0
0003c6 c04e      	RJMP _0x20A0002
                 _lcd_puts:
0003c7 93ba      	ST   -Y,R27
0003c8 93aa      	ST   -Y,R26
0003c9 931a      	ST   -Y,R17
                 _0x2020008:
0003ca 81a9      	LDD  R26,Y+1
0003cb 81ba      	LDD  R27,Y+1+1
0003cc 91ed      	LD   R30,X+
0003cd 83a9      	STD  Y+1,R26
0003ce 83ba      	STD  Y+1+1,R27
0003cf 2f1e      	MOV  R17,R30
0003d0 30e0      	CPI  R30,0
0003d1 f019      	BREQ _0x202000A
0003d2 2fa1      	MOV  R26,R17
0003d3 dfde      	RCALL _lcd_putchar
0003d4 cff5      	RJMP _0x2020008
                 _0x202000A:
0003d5 c010      	RJMP _0x20A0003
                 _lcd_putsf:
0003d6 93ba      	ST   -Y,R27
0003d7 93aa      	ST   -Y,R26
0003d8 931a      	ST   -Y,R17
                 _0x202000B:
0003d9 81e9      	LDD  R30,Y+1
0003da 81fa      	LDD  R31,Y+1+1
0003db 9631      	ADIW R30,1
0003dc 83e9      	STD  Y+1,R30
0003dd 83fa      	STD  Y+1+1,R31
0003de 9731      	SBIW R30,1
0003df 91e4      	LPM  R30,Z
0003e0 2f1e      	MOV  R17,R30
0003e1 30e0      	CPI  R30,0
0003e2 f019      	BREQ _0x202000D
0003e3 2fa1      	MOV  R26,R17
0003e4 dfcd      	RCALL _lcd_putchar
0003e5 cff3      	RJMP _0x202000B
                 _0x202000D:
                 _0x20A0003:
0003e6 8118      	LDD  R17,Y+0
0003e7 9623      	ADIW R28,3
0003e8 9508      	RET
                 _lcd_init:
0003e9 93aa      	ST   -Y,R26
0003ea b3e1      	IN   R30,0x11
0003eb 6fe0      	ORI  R30,LOW(0xF0)
0003ec bbe1      	OUT  0x11,R30
0003ed 9a8a      	SBI  0x11,2
0003ee 9a88      	SBI  0x11,0
0003ef 9a89      	SBI  0x11,1
0003f0 9892      	CBI  0x12,2
0003f1 9890      	CBI  0x12,0
0003f2 9891      	CBI  0x12,1
0003f3 8078      	LDD  R7,Y+0
0003f4 81e8      	LD   R30,Y
0003f5 58e0      	SUBI R30,-LOW(128)
                +
0003f6 93e0 0271+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0003f8 81e8      	LD   R30,Y
0003f9 54e0      	SUBI R30,-LOW(192)
                +
0003fa 93e0 0272+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0003fc e1a4      	LDI  R26,LOW(20)
0003fd e0b0      	LDI  R27,0
0003fe 940e 0625 	CALL _delay_ms
000400 940e 05f1 	CALL SUBOPT_0x3
000402 940e 05f1 	CALL SUBOPT_0x3
000404 940e 05f1 	CALL SUBOPT_0x3
000406 e2a0      	LDI  R26,LOW(32)
000407 df71      	RCALL __lcd_write_nibble_G101
                +
000408 ec88     +LDI R24 , LOW ( 200 )
000409 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00040a 9701     +SBIW R24 , 1
00040b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00040c e2a8      	LDI  R26,LOW(40)
00040d df7f      	RCALL __lcd_write_data
00040e e0a4      	LDI  R26,LOW(4)
00040f df7d      	RCALL __lcd_write_data
000410 e8a5      	LDI  R26,LOW(133)
000411 df7b      	RCALL __lcd_write_data
000412 e0a6      	LDI  R26,LOW(6)
000413 df79      	RCALL __lcd_write_data
000414 df91      	RCALL _lcd_clear
                 _0x20A0002:
000415 9621      	ADIW R28,1
000416 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G102:
000417 93ba      	ST   -Y,R27
000418 93aa      	ST   -Y,R26
000419 931a      	ST   -Y,R17
00041a 930a      	ST   -Y,R16
00041b 81aa      	LDD  R26,Y+2
00041c 81bb      	LDD  R27,Y+2+1
00041d 9612      	ADIW R26,2
00041e 940e 064f 	CALL __GETW1P
000420 9730      	SBIW R30,0
000421 f159      	BREQ _0x2040010
000422 81aa      	LDD  R26,Y+2
000423 81bb      	LDD  R27,Y+2+1
000424 9614      	ADIW R26,4
000425 940e 064f 	CALL __GETW1P
000427 018f      	MOVW R16,R30
000428 9730      	SBIW R30,0
000429 f061      	BREQ _0x2040012
                +
00042a 3002     +CPI R16 , LOW ( 2 )
00042b e0e0     +LDI R30 , HIGH ( 2 )
00042c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00042d f0f0      	BRLO _0x2040013
00042e 01f8      	MOVW R30,R16
00042f 9731      	SBIW R30,1
000430 018f      	MOVW R16,R30
                +
000431 81aa     +LDD R26 , Y + 2
000432 81bb     +LDD R27 , Y + 2 + 1
000433 9614     +ADIW R26 , 4
000434 93ed     +ST X + , R30
000435 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2040012:
000436 81aa      	LDD  R26,Y+2
000437 81bb      	LDD  R27,Y+2+1
000438 9612      	ADIW R26,2
000439 91ed      	LD   R30,X+
00043a 91fd      	LD   R31,X+
00043b 9631      	ADIW R30,1
00043c 93fe      	ST   -X,R31
00043d 93ee      	ST   -X,R30
00043e 9731      	SBIW R30,1
00043f 81ac      	LDD  R26,Y+4
000440 83a0      	STD  Z+0,R26
000441 81aa      	LDD  R26,Y+2
000442 81bb      	LDD  R27,Y+2+1
000443 940e 064f 	CALL __GETW1P
000445 23ff      	TST  R31
000446 f02a      	BRMI _0x2040014
000447 91ed      	LD   R30,X+
000448 91fd      	LD   R31,X+
000449 9631      	ADIW R30,1
00044a 93fe      	ST   -X,R31
00044b 93ee      	ST   -X,R30
                 _0x2040014:
                 _0x2040013:
00044c c006      	RJMP _0x2040015
                 _0x2040010:
00044d 81aa      	LDD  R26,Y+2
00044e 81bb      	LDD  R27,Y+2+1
00044f efef      	LDI  R30,LOW(65535)
000450 efff      	LDI  R31,HIGH(65535)
000451 93ed      	ST   X+,R30
000452 93fc      	ST   X,R31
                 _0x2040015:
000453 8119      	LDD  R17,Y+1
000454 8108      	LDD  R16,Y+0
000455 9625      	ADIW R28,5
000456 9508      	RET
                 __print_G102:
000457 93ba      	ST   -Y,R27
000458 93aa      	ST   -Y,R26
000459 9726      	SBIW R28,6
00045a 940e 0666 	CALL __SAVELOCR6
00045c e010      	LDI  R17,0
00045d 85ac      	LDD  R26,Y+12
00045e 85bd      	LDD  R27,Y+12+1
00045f e0e0      	LDI  R30,LOW(0)
000460 e0f0      	LDI  R31,HIGH(0)
000461 93ed      	ST   X+,R30
000462 93fc      	ST   X,R31
                 _0x2040016:
000463 89ea      	LDD  R30,Y+18
000464 89fb      	LDD  R31,Y+18+1
000465 9631      	ADIW R30,1
000466 8bea      	STD  Y+18,R30
000467 8bfb      	STD  Y+18+1,R31
000468 9731      	SBIW R30,1
000469 91e4      	LPM  R30,Z
00046a 2f2e      	MOV  R18,R30
00046b 30e0      	CPI  R30,0
00046c f411      	BRNE PC+3
00046d 940c 0586 	JMP _0x2040018
00046f 2fe1      	MOV  R30,R17
000470 30e0      	CPI  R30,0
000471 f439      	BRNE _0x204001C
000472 3225      	CPI  R18,37
000473 f411      	BRNE _0x204001D
000474 e011      	LDI  R17,LOW(1)
000475 c002      	RJMP _0x204001E
                 _0x204001D:
000476 940e 05f9 	CALL SUBOPT_0x4
                 _0x204001E:
000478 c10c      	RJMP _0x204001B
                 _0x204001C:
000479 30e1      	CPI  R30,LOW(0x1)
00047a f4a9      	BRNE _0x204001F
00047b 3225      	CPI  R18,37
00047c f419      	BRNE _0x2040020
00047d 940e 05f9 	CALL SUBOPT_0x4
00047f c104      	RJMP _0x20400C9
                 _0x2040020:
000480 e012      	LDI  R17,LOW(2)
000481 e040      	LDI  R20,LOW(0)
000482 e000      	LDI  R16,LOW(0)
000483 322d      	CPI  R18,45
000484 f411      	BRNE _0x2040021
000485 e001      	LDI  R16,LOW(1)
000486 c0fe      	RJMP _0x204001B
                 _0x2040021:
000487 322b      	CPI  R18,43
000488 f411      	BRNE _0x2040022
000489 e24b      	LDI  R20,LOW(43)
00048a c0fa      	RJMP _0x204001B
                 _0x2040022:
00048b 3220      	CPI  R18,32
00048c f411      	BRNE _0x2040023
00048d e240      	LDI  R20,LOW(32)
00048e c0f6      	RJMP _0x204001B
                 _0x2040023:
00048f c002      	RJMP _0x2040024
                 _0x204001F:
000490 30e2      	CPI  R30,LOW(0x2)
000491 f439      	BRNE _0x2040025
                 _0x2040024:
000492 e050      	LDI  R21,LOW(0)
000493 e013      	LDI  R17,LOW(3)
000494 3320      	CPI  R18,48
000495 f411      	BRNE _0x2040026
000496 6800      	ORI  R16,LOW(128)
000497 c0ed      	RJMP _0x204001B
                 _0x2040026:
000498 c004      	RJMP _0x2040027
                 _0x2040025:
000499 30e3      	CPI  R30,LOW(0x3)
00049a f011      	BREQ PC+3
00049b 940c 0585 	JMP _0x204001B
                 _0x2040027:
00049d 3320      	CPI  R18,48
00049e f010      	BRLO _0x204002A
00049f 332a      	CPI  R18,58
0004a0 f008      	BRLO _0x204002B
                 _0x204002A:
0004a1 c007      	RJMP _0x2040029
                 _0x204002B:
0004a2 e0aa      	LDI  R26,LOW(10)
0004a3 9f5a      	MUL  R21,R26
0004a4 2d50      	MOV  R21,R0
0004a5 2fe2      	MOV  R30,R18
0004a6 53e0      	SUBI R30,LOW(48)
0004a7 0f5e      	ADD  R21,R30
0004a8 c0dc      	RJMP _0x204001B
                 _0x2040029:
0004a9 2fe2      	MOV  R30,R18
0004aa 36e3      	CPI  R30,LOW(0x63)
0004ab f449      	BRNE _0x204002F
0004ac 940e 0600 	CALL SUBOPT_0x5
0004ae 89e8      	LDD  R30,Y+16
0004af 89f9      	LDD  R31,Y+16+1
0004b0 81a4      	LDD  R26,Z+4
0004b1 93aa      	ST   -Y,R26
0004b2 940e 0606 	CALL SUBOPT_0x6
0004b4 c0cf      	RJMP _0x2040030
                 _0x204002F:
0004b5 37e3      	CPI  R30,LOW(0x73)
0004b6 f441      	BRNE _0x2040032
0004b7 940e 0600 	CALL SUBOPT_0x5
0004b9 940e 060c 	CALL SUBOPT_0x7
0004bb 940e 05c2 	CALL _strlen
0004bd 2f1e      	MOV  R17,R30
0004be c00a      	RJMP _0x2040033
                 _0x2040032:
0004bf 37e0      	CPI  R30,LOW(0x70)
0004c0 f461      	BRNE _0x2040035
0004c1 940e 0600 	CALL SUBOPT_0x5
0004c3 940e 060c 	CALL SUBOPT_0x7
0004c5 940e 05ce 	CALL _strlenf
0004c7 2f1e      	MOV  R17,R30
0004c8 6008      	ORI  R16,LOW(8)
                 _0x2040033:
0004c9 6002      	ORI  R16,LOW(2)
0004ca 770f      	ANDI R16,LOW(127)
0004cb e030      	LDI  R19,LOW(0)
0004cc c035      	RJMP _0x2040036
                 _0x2040035:
0004cd 36e4      	CPI  R30,LOW(0x64)
0004ce f011      	BREQ _0x2040039
0004cf 36e9      	CPI  R30,LOW(0x69)
0004d0 f411      	BRNE _0x204003A
                 _0x2040039:
0004d1 6004      	ORI  R16,LOW(4)
0004d2 c002      	RJMP _0x204003B
                 _0x204003A:
0004d3 37e5      	CPI  R30,LOW(0x75)
0004d4 f431      	BRNE _0x204003C
                 _0x204003B:
0004d5 e5e4      	LDI  R30,LOW(_tbl10_G102*2)
0004d6 e0f0      	LDI  R31,HIGH(_tbl10_G102*2)
0004d7 83ee      	STD  Y+6,R30
0004d8 83ff      	STD  Y+6+1,R31
0004d9 e015      	LDI  R17,LOW(5)
0004da c00d      	RJMP _0x204003D
                 _0x204003C:
0004db 35e8      	CPI  R30,LOW(0x58)
0004dc f411      	BRNE _0x204003F
0004dd 6008      	ORI  R16,LOW(8)
0004de c004      	RJMP _0x2040040
                 _0x204003F:
0004df 37e8      	CPI  R30,LOW(0x78)
0004e0 f011      	BREQ PC+3
0004e1 940c 0584 	JMP _0x2040071
                 _0x2040040:
0004e3 e5ee      	LDI  R30,LOW(_tbl16_G102*2)
0004e4 e0f0      	LDI  R31,HIGH(_tbl16_G102*2)
0004e5 83ee      	STD  Y+6,R30
0004e6 83ff      	STD  Y+6+1,R31
0004e7 e014      	LDI  R17,LOW(4)
                 _0x204003D:
0004e8 ff02      	SBRS R16,2
0004e9 c014      	RJMP _0x2040042
0004ea 940e 0600 	CALL SUBOPT_0x5
0004ec 940e 0616 	CALL SUBOPT_0x8
0004ee 85ab      	LDD  R26,Y+11
0004ef 23aa      	TST  R26
0004f0 f43a      	BRPL _0x2040043
0004f1 85ea      	LDD  R30,Y+10
0004f2 85fb      	LDD  R31,Y+10+1
0004f3 940e 0633 	CALL __ANEGW1
0004f5 87ea      	STD  Y+10,R30
0004f6 87fb      	STD  Y+10+1,R31
0004f7 e24d      	LDI  R20,LOW(45)
                 _0x2040043:
0004f8 3040      	CPI  R20,0
0004f9 f011      	BREQ _0x2040044
0004fa 5f1f      	SUBI R17,-LOW(1)
0004fb c001      	RJMP _0x2040045
                 _0x2040044:
0004fc 7f0b      	ANDI R16,LOW(251)
                 _0x2040045:
0004fd c004      	RJMP _0x2040046
                 _0x2040042:
0004fe 940e 0600 	CALL SUBOPT_0x5
000500 940e 0616 	CALL SUBOPT_0x8
                 _0x2040046:
                 _0x2040036:
000502 fd00      	SBRC R16,0
000503 c011      	RJMP _0x2040047
                 _0x2040048:
000504 1715      	CP   R17,R21
000505 f478      	BRSH _0x204004A
000506 ff07      	SBRS R16,7
000507 c008      	RJMP _0x204004B
000508 ff02      	SBRS R16,2
000509 c004      	RJMP _0x204004C
00050a 7f0b      	ANDI R16,LOW(251)
00050b 2f24      	MOV  R18,R20
00050c 5011      	SUBI R17,LOW(1)
00050d c001      	RJMP _0x204004D
                 _0x204004C:
00050e e320      	LDI  R18,LOW(48)
                 _0x204004D:
00050f c001      	RJMP _0x204004E
                 _0x204004B:
000510 e220      	LDI  R18,LOW(32)
                 _0x204004E:
000511 940e 05f9 	CALL SUBOPT_0x4
000513 5051      	SUBI R21,LOW(1)
000514 cfef      	RJMP _0x2040048
                 _0x204004A:
                 _0x2040047:
000515 2f31      	MOV  R19,R17
000516 ff01      	SBRS R16,1
000517 c017      	RJMP _0x204004F
                 _0x2040050:
000518 3030      	CPI  R19,0
000519 f0a1      	BREQ _0x2040052
00051a ff03      	SBRS R16,3
00051b c006      	RJMP _0x2040053
00051c 81ee      	LDD  R30,Y+6
00051d 81ff      	LDD  R31,Y+6+1
00051e 9125      	LPM  R18,Z+
00051f 83ee      	STD  Y+6,R30
000520 83ff      	STD  Y+6+1,R31
000521 c005      	RJMP _0x2040054
                 _0x2040053:
000522 81ae      	LDD  R26,Y+6
000523 81bf      	LDD  R27,Y+6+1
000524 912d      	LD   R18,X+
000525 83ae      	STD  Y+6,R26
000526 83bf      	STD  Y+6+1,R27
                 _0x2040054:
000527 940e 05f9 	CALL SUBOPT_0x4
000529 3050      	CPI  R21,0
00052a f009      	BREQ _0x2040055
00052b 5051      	SUBI R21,LOW(1)
                 _0x2040055:
00052c 5031      	SUBI R19,LOW(1)
00052d cfea      	RJMP _0x2040050
                 _0x2040052:
00052e c04b      	RJMP _0x2040056
                 _0x204004F:
                 _0x2040058:
00052f e320      	LDI  R18,LOW(48)
000530 81ee      	LDD  R30,Y+6
000531 81ff      	LDD  R31,Y+6+1
000532 940e 0653 	CALL __GETW1PF
000534 87e8      	STD  Y+8,R30
000535 87f9      	STD  Y+8+1,R31
000536 81ee      	LDD  R30,Y+6
000537 81ff      	LDD  R31,Y+6+1
000538 9632      	ADIW R30,2
000539 83ee      	STD  Y+6,R30
00053a 83ff      	STD  Y+6+1,R31
                 _0x204005A:
00053b 85e8      	LDD  R30,Y+8
00053c 85f9      	LDD  R31,Y+8+1
00053d 85aa      	LDD  R26,Y+10
00053e 85bb      	LDD  R27,Y+10+1
00053f 17ae      	CP   R26,R30
000540 07bf      	CPC  R27,R31
000541 f050      	BRLO _0x204005C
000542 5f2f      	SUBI R18,-LOW(1)
000543 85a8      	LDD  R26,Y+8
000544 85b9      	LDD  R27,Y+8+1
000545 85ea      	LDD  R30,Y+10
000546 85fb      	LDD  R31,Y+10+1
000547 1bea      	SUB  R30,R26
000548 0bfb      	SBC  R31,R27
000549 87ea      	STD  Y+10,R30
00054a 87fb      	STD  Y+10+1,R31
00054b cfef      	RJMP _0x204005A
                 _0x204005C:
00054c 332a      	CPI  R18,58
00054d f028      	BRLO _0x204005D
00054e ff03      	SBRS R16,3
00054f c002      	RJMP _0x204005E
000550 5f29      	SUBI R18,-LOW(7)
000551 c001      	RJMP _0x204005F
                 _0x204005E:
000552 5d29      	SUBI R18,-LOW(39)
                 _0x204005F:
                 _0x204005D:
000553 fd04      	SBRC R16,4
000554 c01a      	RJMP _0x2040061
000555 3321      	CPI  R18,49
000556 f420      	BRSH _0x2040063
000557 85a8      	LDD  R26,Y+8
000558 85b9      	LDD  R27,Y+8+1
000559 9711      	SBIW R26,1
00055a f409      	BRNE _0x2040062
                 _0x2040063:
00055b c009      	RJMP _0x20400CA
                 _0x2040062:
00055c 1753      	CP   R21,R19
00055d f010      	BRLO _0x2040067
00055e ff00      	SBRS R16,0
00055f c001      	RJMP _0x2040068
                 _0x2040067:
000560 c013      	RJMP _0x2040066
                 _0x2040068:
000561 e220      	LDI  R18,LOW(32)
000562 ff07      	SBRS R16,7
000563 c00b      	RJMP _0x2040069
000564 e320      	LDI  R18,LOW(48)
                 _0x20400CA:
000565 6100      	ORI  R16,LOW(16)
000566 ff02      	SBRS R16,2
000567 c007      	RJMP _0x204006A
000568 7f0b      	ANDI R16,LOW(251)
000569 934a      	ST   -Y,R20
00056a 940e 0606 	CALL SUBOPT_0x6
00056c 3050      	CPI  R21,0
00056d f009      	BREQ _0x204006B
00056e 5051      	SUBI R21,LOW(1)
                 _0x204006B:
                 _0x204006A:
                 _0x2040069:
                 _0x2040061:
00056f 940e 05f9 	CALL SUBOPT_0x4
000571 3050      	CPI  R21,0
000572 f009      	BREQ _0x204006C
000573 5051      	SUBI R21,LOW(1)
                 _0x204006C:
                 _0x2040066:
000574 5031      	SUBI R19,LOW(1)
000575 85a8      	LDD  R26,Y+8
000576 85b9      	LDD  R27,Y+8+1
000577 9712      	SBIW R26,2
000578 f008      	BRLO _0x2040059
000579 cfb5      	RJMP _0x2040058
                 _0x2040059:
                 _0x2040056:
00057a ff00      	SBRS R16,0
00057b c008      	RJMP _0x204006D
                 _0x204006E:
00057c 3050      	CPI  R21,0
00057d f031      	BREQ _0x2040070
00057e 5051      	SUBI R21,LOW(1)
00057f e2e0      	LDI  R30,LOW(32)
000580 93ea      	ST   -Y,R30
000581 940e 0606 	CALL SUBOPT_0x6
000583 cff8      	RJMP _0x204006E
                 _0x2040070:
                 _0x204006D:
                 _0x2040071:
                 _0x2040030:
                 _0x20400C9:
000584 e010      	LDI  R17,LOW(0)
                 _0x204001B:
000585 cedd      	RJMP _0x2040016
                 _0x2040018:
000586 85ac      	LDD  R26,Y+12
000587 85bd      	LDD  R27,Y+12+1
000588 940e 064f 	CALL __GETW1P
00058a 940e 066d 	CALL __LOADLOCR6
00058c 9664      	ADIW R28,20
00058d 9508      	RET
                 _sprintf:
00058e 92ff      	PUSH R15
00058f 2ef8      	MOV  R15,R24
000590 9726      	SBIW R28,6
000591 940e 0668 	CALL __SAVELOCR4
000593 940e 061e 	CALL SUBOPT_0x9
000595 9730      	SBIW R30,0
000596 f419      	BRNE _0x2040072
000597 efef      	LDI  R30,LOW(65535)
000598 efff      	LDI  R31,HIGH(65535)
000599 c023      	RJMP _0x20A0001
                 _0x2040072:
00059a 01de      	MOVW R26,R28
00059b 9616      	ADIW R26,6
00059c 940e 062f 	CALL __ADDW2R15
00059e 018d      	MOVW R16,R26
00059f 940e 061e 	CALL SUBOPT_0x9
0005a1 83ee      	STD  Y+6,R30
0005a2 83ff      	STD  Y+6+1,R31
0005a3 e0e0      	LDI  R30,LOW(0)
0005a4 87e8      	STD  Y+8,R30
0005a5 87e9      	STD  Y+8+1,R30
0005a6 01de      	MOVW R26,R28
0005a7 961a      	ADIW R26,10
0005a8 940e 062f 	CALL __ADDW2R15
0005aa 940e 064f 	CALL __GETW1P
0005ac 93fa      	ST   -Y,R31
0005ad 93ea      	ST   -Y,R30
0005ae 931a      	ST   -Y,R17
0005af 930a      	ST   -Y,R16
0005b0 e1e7      	LDI  R30,LOW(_put_buff_G102)
0005b1 e0f4      	LDI  R31,HIGH(_put_buff_G102)
0005b2 93fa      	ST   -Y,R31
0005b3 93ea      	ST   -Y,R30
0005b4 01de      	MOVW R26,R28
0005b5 961a      	ADIW R26,10
0005b6 dea0      	RCALL __print_G102
0005b7 019f      	MOVW R18,R30
0005b8 81ae      	LDD  R26,Y+6
0005b9 81bf      	LDD  R27,Y+6+1
0005ba e0e0      	LDI  R30,LOW(0)
0005bb 93ec      	ST   X,R30
0005bc 01f9      	MOVW R30,R18
                 _0x20A0001:
0005bd 940e 066f 	CALL __LOADLOCR4
0005bf 962a      	ADIW R28,10
0005c0 90ff      	POP  R15
0005c1 9508      	RET
                 
                 	.CSEG
                 _strlen:
0005c2 93ba      	ST   -Y,R27
0005c3 93aa      	ST   -Y,R26
0005c4 91a9          ld   r26,y+
0005c5 91b9          ld   r27,y+
0005c6 27ee          clr  r30
0005c7 27ff          clr  r31
                 strlen0:
0005c8 916d          ld   r22,x+
0005c9 2366          tst  r22
0005ca f011          breq strlen1
0005cb 9631          adiw r30,1
0005cc cffb          rjmp strlen0
                 strlen1:
0005cd 9508          ret
                 _strlenf:
0005ce 93ba      	ST   -Y,R27
0005cf 93aa      	ST   -Y,R26
0005d0 27aa          clr  r26
0005d1 27bb          clr  r27
0005d2 91e9          ld   r30,y+
0005d3 91f9          ld   r31,y+
                 strlenf0:
0005d4 9005      	lpm  r0,z+
0005d5 2000          tst  r0
0005d6 f011          breq strlenf1
0005d7 9611          adiw r26,1
0005d8 cffb          rjmp strlenf0
                 strlenf1:
0005d9 01fd          movw r30,r26
0005da 9508          ret
                 
                 	.CSEG
                 
                 	.DSEG
                 _twi_tx_index:
000260           	.BYTE 0x1
                 _twi_rx_index:
000261           	.BYTE 0x1
                 _twi_result:
000262           	.BYTE 0x1
                 _slave_address_G100:
000263           	.BYTE 0x1
                 _twi_tx_buffer_G100:
000264           	.BYTE 0x2
                 _bytes_to_tx_G100:
000266           	.BYTE 0x1
                 _twi_rx_buffer_G100:
000267           	.BYTE 0x2
                 _bytes_to_rx_G100:
000269           	.BYTE 0x1
                 _twi_rx_buffer_size_G100:
00026a           	.BYTE 0x1
                 _twi_slave_rx_handler_G100:
00026b           	.BYTE 0x2
                 _twi_slave_tx_handler_G100:
00026d           	.BYTE 0x2
                 __base_y_G101:
00026f           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
0005db 940e 03a6 	CALL _lcd_clear
0005dd e0e0      	LDI  R30,LOW(0)
0005de 93ea      	ST   -Y,R30
0005df e0a0      	LDI  R26,LOW(0)
0005e0 940c 0399 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0005e2 940e 0625 	CALL _delay_ms
0005e4 e5e0      	LDI  R30,LOW(80)
0005e5 93ea      	ST   -Y,R30
0005e6 01fe      	MOVW R30,R28
0005e7 963b      	ADIW R30,11
0005e8 93fa      	ST   -Y,R31
0005e9 93ea      	ST   -Y,R30
0005ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0005eb 940e 038d 	CALL __lcd_write_data
0005ed e0a3      	LDI  R26,LOW(3)
0005ee e0b0      	LDI  R27,0
0005ef 940c 0625 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
0005f1 e3a0      	LDI  R26,LOW(48)
0005f2 940e 0379 	CALL __lcd_write_nibble_G101
                +
0005f4 ec88     +LDI R24 , LOW ( 200 )
0005f5 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0005f6 9701     +SBIW R24 , 1
0005f7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0005f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
0005f9 932a      	ST   -Y,R18
0005fa 85ad      	LDD  R26,Y+13
0005fb 85be      	LDD  R27,Y+13+1
0005fc 85ef      	LDD  R30,Y+15
0005fd 89f8      	LDD  R31,Y+15+1
0005fe 9509      	ICALL
0005ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000600 89e8      	LDD  R30,Y+16
000601 89f9      	LDD  R31,Y+16+1
000602 9734      	SBIW R30,4
000603 8be8      	STD  Y+16,R30
000604 8bf9      	STD  Y+16+1,R31
000605 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000606 85ad      	LDD  R26,Y+13
000607 85be      	LDD  R27,Y+13+1
000608 85ef      	LDD  R30,Y+15
000609 89f8      	LDD  R31,Y+15+1
00060a 9509      	ICALL
00060b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
00060c 89a8      	LDD  R26,Y+16
00060d 89b9      	LDD  R27,Y+16+1
00060e 9614      	ADIW R26,4
00060f 940e 064f 	CALL __GETW1P
000611 83ee      	STD  Y+6,R30
000612 83ff      	STD  Y+6+1,R31
000613 81ae      	LDD  R26,Y+6
000614 81bf      	LDD  R27,Y+6+1
000615 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000616 89a8      	LDD  R26,Y+16
000617 89b9      	LDD  R27,Y+16+1
000618 9614      	ADIW R26,4
000619 940e 064f 	CALL __GETW1P
00061b 87ea      	STD  Y+10,R30
00061c 87fb      	STD  Y+10+1,R31
00061d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00061e 01de      	MOVW R26,R28
00061f 961c      	ADIW R26,12
000620 940e 062f 	CALL __ADDW2R15
000622 940e 064f 	CALL __GETW1P
000624 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000625 9610      	adiw r26,0
000626 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000627 ed80     +LDI R24 , LOW ( 0x7D0 )
000628 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000629 9701     +SBIW R24 , 1
00062a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00062b 95a8      	wdr
00062c 9711      	sbiw r26,1
00062d f7c9      	brne __delay_ms0
                 __delay_ms1:
00062e 9508      	ret
                 
                 __ADDW2R15:
00062f 2400      	CLR  R0
000630 0daf      	ADD  R26,R15
000631 1db0      	ADC  R27,R0
000632 9508      	RET
                 
                 __ANEGW1:
000633 95f1      	NEG  R31
000634 95e1      	NEG  R30
000635 40f0      	SBCI R31,0
000636 9508      	RET
                 
                 __EQB12:
000637 17ea      	CP   R30,R26
000638 e0e1      	LDI  R30,1
000639 f009      	BREQ __EQB12T
00063a 27ee      	CLR  R30
                 __EQB12T:
00063b 9508      	RET
                 
                 __DIVW21U:
00063c 2400      	CLR  R0
00063d 2411      	CLR  R1
00063e e190      	LDI  R25,16
                 __DIVW21U1:
00063f 0faa      	LSL  R26
000640 1fbb      	ROL  R27
000641 1c00      	ROL  R0
000642 1c11      	ROL  R1
000643 1a0e      	SUB  R0,R30
000644 0a1f      	SBC  R1,R31
000645 f418      	BRCC __DIVW21U2
000646 0e0e      	ADD  R0,R30
000647 1e1f      	ADC  R1,R31
000648 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000649 60a1      	SBR  R26,1
                 __DIVW21U3:
00064a 959a      	DEC  R25
00064b f799      	BRNE __DIVW21U1
00064c 01fd      	MOVW R30,R26
00064d 01d0      	MOVW R26,R0
00064e 9508      	RET
                 
                 __GETW1P:
00064f 91ed      	LD   R30,X+
000650 91fc      	LD   R31,X
000651 9711      	SBIW R26,1
000652 9508      	RET
                 
                 __GETW1PF:
000653 9005      	LPM  R0,Z+
000654 91f4      	LPM  R31,Z
000655 2de0      	MOV  R30,R0
000656 9508      	RET
                 
                 __GETD1S0:
000657 81e8      	LD   R30,Y
000658 81f9      	LDD  R31,Y+1
000659 816a      	LDD  R22,Y+2
00065a 817b      	LDD  R23,Y+3
00065b 9508      	RET
                 
                 __PUTD1S0:
00065c 83e8      	ST   Y,R30
00065d 83f9      	STD  Y+1,R31
00065e 836a      	STD  Y+2,R22
00065f 837b      	STD  Y+3,R23
000660 9508      	RET
                 
                 __PUTPARD1:
000661 937a      	ST   -Y,R23
000662 936a      	ST   -Y,R22
000663 93fa      	ST   -Y,R31
000664 93ea      	ST   -Y,R30
000665 9508      	RET
                 
                 __SAVELOCR6:
000666 935a      	ST   -Y,R21
                 __SAVELOCR5:
000667 934a      	ST   -Y,R20
                 __SAVELOCR4:
000668 933a      	ST   -Y,R19
                 __SAVELOCR3:
000669 932a      	ST   -Y,R18
                 __SAVELOCR2:
00066a 931a      	ST   -Y,R17
00066b 930a      	ST   -Y,R16
00066c 9508      	RET
                 
                 __LOADLOCR6:
00066d 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00066e 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00066f 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000670 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000671 8119      	LDD  R17,Y+1
000672 8108      	LD   R16,Y
000673 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  18 r1 :   7 r2 :  16 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  44 r17:  43 r18:  46 r19:  14 r20:  13 r21:  17 r22:  13 r23:   9 
r24:  25 r25:   9 r26: 156 r27:  63 r28:  22 r29:   1 r30: 387 r31: 102 
x  :  28 y  : 242 z  :  16 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   7 
adiw  :  29 and   :   0 andi  :  24 asr   :   0 bclr  :   0 bld   :  11 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  34 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  11 
brlt  :   0 brmi  :   1 brne  :  65 brpl  :   1 brsh  :   7 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  69 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  16 cls   :   0 clt   :   5 clv   :   0 clz   :   0 com   :   0 
cp    :  12 cpc   :   9 cpi   :  75 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   6 ijmp  :   0 
in    :  25 inc   :   2 jmp   :  28 ld    :  40 ldd   : 102 ldi   : 169 
lds   :  36 lpm   :  16 lsl   :   2 lsr   :   0 mov   :  24 movw  :  24 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :  26 out   :  28 pop   :   1 push  :   1 rcall :  18 ret   :  30 
reti  :   1 rjmp  : 114 rol   :   3 ror   :   0 sbc   :   2 sbci  :   4 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  31 sbr   :   1 sbrc  :   3 
sbrs  :  14 sec   :   0 seh   :   0 sei   :   2 sen   :   0 ser   :   0 
ses   :   0 set   :   7 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  92 std   :  39 sts   :  24 sub   :   2 subi  :  23 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 62 out of 116 (53.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000ce8   3006    298   3304   32768  10.1%
[.dseg] 0x000060 0x000273      0     19     19    2143   0.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
